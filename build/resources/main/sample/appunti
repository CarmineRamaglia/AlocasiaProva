public class LoginController extends Controller implements Initializable {

    //DICHIARAZIONE DEI DATI

    //Statement statement;

    @FXML
    private Label loginMessageLabel;
    @FXML
    private ImageView logoSfondoImageView;
    @FXML
    private ImageView lockImageView;
    @FXML
    private Button closeButton;
    @FXML
    private Button minusButton;
    @FXML
    private TextField usernameTextField;
    @FXML
    private PasswordField enterPasswordField;
    @FXML
    private Button registerButton;
    @FXML
    private BorderPane borderPane;

    private double x=0;
    private double y=0;

    //CREAZIONE DEI METODI

    //SETTARE CONNESSIONE AL DATA BASE
    /*public void MySQLConnection() throws SQLException {
        DBManager.setConnection(
                DBManager.JDBC_Driver_MySQL,
                DBManager.JDBC_URL_MySQL);
        statement = DBManager.getConnection().createStatement(
                ResultSet.TYPE_SCROLL_SENSITIVE,
                ResultSet.CONCUR_UPDATABLE);
    }*/

    //MUOVERE IL BORDERPANE
    @FXML
    private void borderPaneDragger(MouseEvent event){
        Stage stage=(Stage) borderPane.getScene().getWindow();
        stage.setX(event.getScreenX() - x);
        stage.setY(event.getScreenY() - y);
    }
    @FXML
    private void borderPanePressed(MouseEvent event){
        x=event.getSceneX();
        System.out.println(x);
        y=event.getSceneY();
        System.out.println(y);
    }

    //CHIUSURA CON IL BOTTONE ROSSO
    @FXML
    private void handleClose(MouseEvent event){
        if(event.getSource()==closeButton){
            System.exit(0);
        }
    }

    //MINIMIZZARE FINESTRA CON BOTTONE GIALLO
    @FXML
    private void handleMinus(MouseEvent event){
        Stage stage= (Stage) minusButton.getScene().getWindow();
        stage.setIconified(true);
    }

    //INIZIALIZZARE IMMAGINI
    @Override
    public void initialize(URL url, ResourceBundle resourceBundle) {
        File logoSfondoFile=new File("src/main/java/Aloimg/logoSfondo.jpg");
        Image logoSfondoImage=new Image(logoSfondoFile.toURI().toString());
        logoSfondoImageView.setImage(logoSfondoImage);

        File lockFile=new File("src/main/java/Aloimg/lock.png");
        Image lockImage=new Image(lockFile.toURI().toString());
        lockImageView.setImage(lockImage);
    }

    //BOTTONE LOGIN
    public void loginButtonOnAction(ActionEvent event) throws SQLException {
        System.out.println("click su login");
        methodLogin();
    }

    //METODO DI LOGIN
    public void methodLogin() throws SQLException{
        textControll(usernameTextField);
        textControll(enterPasswordField);

        if(usernameTextField.getText().length()==0 || enterPasswordField.getText().length()==0){
            loginMessageLabel.setText("Inserire Username e password!");
        }else{
            validateLogin();
        }

    }

    //CONVALIDAZIONE LOGIN TRAMITE DATA BASE
    public void validateLogin() throws SQLException {
        MySQLConnection();

        ResultSet rs=statement.executeQuery("SELECT COUNT(*) FROM user WHERE BINARY username = '"+usernameTextField.getText()
                +"' AND BINARY password ='"+enterPasswordField.getText()+"'");
        while (rs.next()) {
            if (rs.getInt(1) == 1) {
                setNormalStyle(usernameTextField);
                setNormalStyle(enterPasswordField);
                loginMessageLabel.setText("ESISTI!");

            } else {
                setErrorStyle(usernameTextField);
                setErrorStyle(enterPasswordField);
                loginMessageLabel.setText("Username o Password errata!");
            }
        }

    }

    //ENTER CLICK SU USER_TEXT_FIELD E PWD_TEXT_FIELD
    @FXML
    public void enterClick(KeyEvent event){
        keyPressedEnter();
    }

    //METODO DELL'ENTER CLICK SU USER_TEXT_FIELD E PWD_TEXT_FIELD
    public void keyPressedEnter() {
        usernameTextField.setOnKeyPressed(event -> {
            if(event.getCode().equals(KeyCode.ENTER)){
                System.out.println("click su username");
                try {
                    methodLogin();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        });
        enterPasswordField.setOnKeyPressed(event -> {
            if(event.getCode().equals(KeyCode.ENTER)){
                System.out.println("click su password");
                try {
                    methodLogin();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        });
    }

    //BOTTONE ANNULLA
    public void annullaButtonOnAction(ActionEvent event){
        setNormalStyle(usernameTextField);
        setNormalStyle(enterPasswordField);
        usernameTextField.clear();
        enterPasswordField.clear();
    }

    //PASSARE ALLA SCHERMATA DI REGISTRAZIONE
    public void switchToRegistration(ActionEvent event) throws IOException {
        Stage stage=(Stage) registerButton.getScene().getWindow();
        stage.close();
        Stage primaryStage=new Stage();
        Parent root=FXMLLoader.load(getClass().getResource("registration.fxml"));
        Scene scene =new Scene(root);

        primaryStage.initStyle(StageStyle.TRANSPARENT);
        scene.setFill(Color.TRANSPARENT);
        primaryStage.setTitle("Registration");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

}
